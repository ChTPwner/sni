// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: sni.proto

package sni

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// capabilities of a SNES device [32-bit bit field]
type DeviceCapability int32

const (
	DeviceCapability_NONE     DeviceCapability = 0
	DeviceCapability_READ     DeviceCapability = 1  // can read
	DeviceCapability_WRITE    DeviceCapability = 2  // can write
	DeviceCapability_EXEC_ASM DeviceCapability = 4  // can execute custom ASM
	DeviceCapability_RESET    DeviceCapability = 8  // can reset system
	DeviceCapability_PAUSE    DeviceCapability = 16 // can pause emulation
)

// Enum value maps for DeviceCapability.
var (
	DeviceCapability_name = map[int32]string{
		0:  "NONE",
		1:  "READ",
		2:  "WRITE",
		4:  "EXEC_ASM",
		8:  "RESET",
		16: "PAUSE",
	}
	DeviceCapability_value = map[string]int32{
		"NONE":     0,
		"READ":     1,
		"WRITE":    2,
		"EXEC_ASM": 4,
		"RESET":    8,
		"PAUSE":    16,
	}
)

func (x DeviceCapability) Enum() *DeviceCapability {
	p := new(DeviceCapability)
	*p = x
	return p
}

func (x DeviceCapability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceCapability) Descriptor() protoreflect.EnumDescriptor {
	return file_sni_proto_enumTypes[0].Descriptor()
}

func (DeviceCapability) Type() protoreflect.EnumType {
	return &file_sni_proto_enumTypes[0]
}

func (x DeviceCapability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceCapability.Descriptor instead.
func (DeviceCapability) EnumDescriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{0}
}

type DevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional list of device kind filters
	Kinds []string `protobuf:"bytes,1,rep,name=kinds,proto3" json:"kinds,omitempty"`
}

func (x *DevicesRequest) Reset() {
	*x = DevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sni_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevicesRequest) ProtoMessage() {}

func (x *DevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sni_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevicesRequest.ProtoReflect.Descriptor instead.
func (*DevicesRequest) Descriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{0}
}

func (x *DevicesRequest) GetKinds() []string {
	if x != nil {
		return x.Kinds
	}
	return nil
}

type DevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*DevicesResponse_Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *DevicesResponse) Reset() {
	*x = DevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sni_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevicesResponse) ProtoMessage() {}

func (x *DevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sni_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevicesResponse.ProtoReflect.Descriptor instead.
func (*DevicesResponse) Descriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{1}
}

func (x *DevicesResponse) GetDevices() []*DevicesResponse_Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type ReadMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri     string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Size    uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ReadMemoryRequest) Reset() {
	*x = ReadMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sni_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMemoryRequest) ProtoMessage() {}

func (x *ReadMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sni_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMemoryRequest.ProtoReflect.Descriptor instead.
func (*ReadMemoryRequest) Descriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{2}
}

func (x *ReadMemoryRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ReadMemoryRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadMemoryRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReadMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri     string  `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Success *bool   `protobuf:"varint,2,opt,name=success,proto3,oneof" json:"success,omitempty"`
	Error   *string `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Data    []byte  `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReadMemoryResponse) Reset() {
	*x = ReadMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sni_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMemoryResponse) ProtoMessage() {}

func (x *ReadMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sni_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMemoryResponse.ProtoReflect.Descriptor instead.
func (*ReadMemoryResponse) Descriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{3}
}

func (x *ReadMemoryResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ReadMemoryResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ReadMemoryResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *ReadMemoryResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteMemoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri     string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Data    []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *WriteMemoryRequest) Reset() {
	*x = WriteMemoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sni_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMemoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMemoryRequest) ProtoMessage() {}

func (x *WriteMemoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sni_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMemoryRequest.ProtoReflect.Descriptor instead.
func (*WriteMemoryRequest) Descriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{4}
}

func (x *WriteMemoryRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *WriteMemoryRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteMemoryRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteMemoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri     string  `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Success *bool   `protobuf:"varint,2,opt,name=success,proto3,oneof" json:"success,omitempty"`
	Error   *string `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *WriteMemoryResponse) Reset() {
	*x = WriteMemoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sni_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMemoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMemoryResponse) ProtoMessage() {}

func (x *WriteMemoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sni_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMemoryResponse.ProtoReflect.Descriptor instead.
func (*WriteMemoryResponse) Descriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{5}
}

func (x *WriteMemoryResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *WriteMemoryResponse) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *WriteMemoryResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

type DevicesResponse_Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a URI that describes exactly how to connect to the device, e.g. udp://localhost:55355 for RetroArch, file://dev/usb.ttyS0, file://COM4
	// this can also be used as a unique identifier for the device for clients to refer to
	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	// friendly display name of the device
	DisplayName string `protobuf:"bytes,2,opt,name=displayName,proto3" json:"displayName,omitempty"`
	// device kind, e.g. "fxpakpro", "retroarch", "lua"
	Kind string `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	// version of the device's firmware or software depending on device kind, e.g. "1.9.2" for "retroarch", "1.10.3" for "fxpakpro"
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// use DeviceCapability enum as bit field, ORing values together
	Capabilities int32 `protobuf:"varint,5,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *DevicesResponse_Device) Reset() {
	*x = DevicesResponse_Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sni_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevicesResponse_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevicesResponse_Device) ProtoMessage() {}

func (x *DevicesResponse_Device) ProtoReflect() protoreflect.Message {
	mi := &file_sni_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevicesResponse_Device.ProtoReflect.Descriptor instead.
func (*DevicesResponse_Device) Descriptor() ([]byte, []int) {
	return file_sni_proto_rawDescGZIP(), []int{1, 0}
}

func (x *DevicesResponse_Device) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DevicesResponse_Device) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DevicesResponse_Device) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *DevicesResponse_Device) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DevicesResponse_Device) GetCapabilities() int32 {
	if x != nil {
		return x.Capabilities
	}
	return 0
}

var File_sni_proto protoreflect.FileDescriptor

var file_sni_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x6e, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6b, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x69,
	0x6e, 0x64, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x8e, 0x01, 0x0a, 0x06, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x11, 0x52,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x54, 0x0a,
	0x12, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x13, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x55, 0x0a, 0x10,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45,
	0x41, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x45, 0x58, 0x45, 0x43, 0x5f, 0x41, 0x53, 0x4d, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x41, 0x55, 0x53,
	0x45, 0x10, 0x10, 0x32, 0xb9, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x12, 0x13, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c,
	0x74, 0x74, 0x70, 0x6f, 0x2f, 0x73, 0x6e, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x73, 0x6e, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sni_proto_rawDescOnce sync.Once
	file_sni_proto_rawDescData = file_sni_proto_rawDesc
)

func file_sni_proto_rawDescGZIP() []byte {
	file_sni_proto_rawDescOnce.Do(func() {
		file_sni_proto_rawDescData = protoimpl.X.CompressGZIP(file_sni_proto_rawDescData)
	})
	return file_sni_proto_rawDescData
}

var file_sni_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sni_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sni_proto_goTypes = []interface{}{
	(DeviceCapability)(0),          // 0: DeviceCapability
	(*DevicesRequest)(nil),         // 1: DevicesRequest
	(*DevicesResponse)(nil),        // 2: DevicesResponse
	(*ReadMemoryRequest)(nil),      // 3: ReadMemoryRequest
	(*ReadMemoryResponse)(nil),     // 4: ReadMemoryResponse
	(*WriteMemoryRequest)(nil),     // 5: WriteMemoryRequest
	(*WriteMemoryResponse)(nil),    // 6: WriteMemoryResponse
	(*DevicesResponse_Device)(nil), // 7: DevicesResponse.Device
}
var file_sni_proto_depIdxs = []int32{
	7, // 0: DevicesResponse.devices:type_name -> DevicesResponse.Device
	1, // 1: DevicesService.ListDevices:input_type -> DevicesRequest
	3, // 2: DevicesService.ReadMemory:input_type -> ReadMemoryRequest
	5, // 3: DevicesService.WriteMemory:input_type -> WriteMemoryRequest
	2, // 4: DevicesService.ListDevices:output_type -> DevicesResponse
	4, // 5: DevicesService.ReadMemory:output_type -> ReadMemoryResponse
	6, // 6: DevicesService.WriteMemory:output_type -> WriteMemoryResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sni_proto_init() }
func file_sni_proto_init() {
	if File_sni_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sni_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sni_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sni_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sni_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sni_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteMemoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sni_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteMemoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sni_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevicesResponse_Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sni_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_sni_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sni_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sni_proto_goTypes,
		DependencyIndexes: file_sni_proto_depIdxs,
		EnumInfos:         file_sni_proto_enumTypes,
		MessageInfos:      file_sni_proto_msgTypes,
	}.Build()
	File_sni_proto = out.File
	file_sni_proto_rawDesc = nil
	file_sni_proto_goTypes = nil
	file_sni_proto_depIdxs = nil
}
